<div>
    <div class="row">
        <div class="col-md-6">
            <input type="text" class="form-control" placeholder="Type location..." id="locationName">
        </div>
        <div class="col-md-6">
            <input type="button" value="Search" onclick="SearchMultipleLocation()" class="btn btn-primary" />
        </div>
    </div>
</div>
<hr />
<div id='mapCanvas' style='width: 75vw; height: 75vh;'></div>
@section scripts {
    <script type='text/javascript' src='http://www.bing.com/api/maps/mapcontrol?branch=release&callback=loadMapScenario' async defer></script>
    <script>

        function SearchMultipleLocation() {
            alert("Click")
            GetMapPushPinLocation();
        }
        var map, infobox;

        function GetMapPushPinLocation() {
            map = new Microsoft.Maps.Map('#mapCanvas', {
                credentials: "AmPhY-Ia2t-NH3_pzWXzcFcU3ezL4mAAYW2basjlmszq3Ml_tWQb_pT-7-TBtrNW",
                center: new Microsoft.Maps.Location(31.628674, -7.992047), // Put your country Lat and Log here
                zoom: 8
            });

            //Create an infobox at the center of the map but don't show it.
            infobox = new Microsoft.Maps.Infobox(map.getCenter(), {
                visible: false
            });

            //Assign the infobox to a map instance.
            infobox.setMap(map);

            //Create random locations in the map bounds.
            var randomLocations = Microsoft.Maps.TestDataGenerator.getLocations(10, map.getBounds());

            for (var i = 0; i < randomLocations.length; i++) {
                var pin = new Microsoft.Maps.Pushpin(randomLocations[i]);

                //Store some metadata with the pushpin.
                pin.metadata = {
                    title: 'Pin ' + i,
                    description: 'Description for pin' + i
                };

                //Add a click event handler to the pushpin.
                Microsoft.Maps.Events.addHandler(pin, 'click', pushpinClicked);

                //Add pushpin to the map.
                map.entities.push(pin);
            }
        }

        function pushpinClicked(e) {
            //Make sure the infobox has metadata to display.
            if (e.target.metadata) {
                //Set the infobox options with the metadata of the pushpin.
                infobox.setOptions({
                    location: e.target.getLocation(),
                    title: e.target.metadata.title,
                    description: e.target.metadata.description,
                    visible: true
                });
            }
        }

        function SearchLocation() {
            alert("Click")
            var lcoationName = document.getElementById("locationName").value;
            loadMapScenario(lcoationName)
        }
        function loadMapScenario(locationKey) {
            var map = new Microsoft.Maps.Map(document.getElementById('myMap'), {
                credentials: "AmPhY-Ia2t-NH3_pzWXzcFcU3ezL4mAAYW2basjlmszq3Ml_tWQb_pT-7-TBtrNW",
                center: new Microsoft.Maps.Location(47.624527, -122.355255),
                zoom: 8
            });
            Microsoft.Maps.loadModule('Microsoft.Maps.Search', function () {
                var searchManager = new Microsoft.Maps.Search.SearchManager(map);
                var requestOptions = {
                    bounds: map.getBounds(),
                    where: locationKey,
                    callback: function (answer, userData) {
                        map.setView({ bounds: answer.results[0].bestView });
                        map.entities.push(new Microsoft.Maps.Pushpin(answer.results[0].location));
                    }
                };
                searchManager.geocode(requestOptions);
            });

        }
    </script>
}